<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycollab.module.crm.dao.MeetingMapperExt">

	<resultMap id="SimpleMeetingResult"
		extends="com.mycollab.module.crm.dao.MeetingMapper.ResultMapWithBLOBs"
		type="com.mycollab.module.crm.domain.SimpleMeeting">

		<result column="createdUserFullName" jdbcType="VARCHAR"
			property="createdUserFullName" />

		<result column="contactTypeName" jdbcType="VARCHAR" property="contactTypeName" />
	</resultMap>

	<sql id="selectSimpleMeeting">
        <![CDATA[
        SELECT m_crm_meeting.id, m_crm_meeting.subject,
            m_crm_meeting.status, m_crm_meeting.type, m_crm_meeting.typeId,
            m_crm_meeting.startDate, m_crm_meeting.endDate,
            m_crm_meeting.lastUpdatedTime, m_crm_meeting.createdTime,
            m_crm_meeting.createdUser, m_crm_meeting.sAccountId,
            m_crm_meeting.location, m_crm_meeting.description,
            m_crm_meeting.isRecurrence, m_crm_meeting.recurrenceType,
            m_crm_meeting.recurrenceInfo,
            m_crm_meeting.recurrenceStartDate,
            m_crm_meeting.recurrenceEndDate, m_crm_meeting.contactType,
            m_crm_meeting.contactTypeId, m_crm_meeting.isClosed,
            m_crm_meeting.isNotified, m_crm_meeting.isNotifiedPrior,
            LTRIM(concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')), s_user.lastname)) as createdUserFullName
        FROM m_crm_meeting
        LEFT OUTER JOIN s_user ON (m_crm_meeting.createdUser = s_user.username)
        ]]>
	</sql>

	<sql id="querySearchCriteria">
        <![CDATA[
        #set($searchCriteria = $_parameter.searchCriteria)
        
        #ifnotnull($searchCriteria.id)
            ${searchCriteria.id.operation} m_crm_meeting.id ${searchCriteria.id.compareOperator} @{searchCriteria.id.value,jdbcType=NUMERIC}
        #end
        
        #ifnotnull($searchCriteria.saccountid)
            ${searchCriteria.saccountid.operation} m_crm_meeting.sAccountId = @{searchCriteria.saccountid.value,jdbcType=NUMERIC}
        #end
        
        #ifnotnull($searchCriteria.assignUsers)
            ${searchCriteria.assignUsers.operation}
            m_crm_meeting.createdUser IN
            #repeat(${searchCriteria.assignUsers.values} $assignUser "," "(" ")")
                @{assignUser}
            #end
        #end
        
        #ifnotnull($searchCriteria.isClosed)
            ${searchCriteria.isClosed.operation} m_crm_meeting.isClosed = ${searchCriteria.isClosed.value}
        #end
        
        #ifnotnull($searchCriteria.startDate)
            #ifnotnull($searchCriteria.endDate)
                AND (
                    (   
                        m_crm_meeting.startDate >= @{searchCriteria.startDate.value,javaType=DATE}
                        AND m_crm_meeting.endDate <= @{searchCriteria.endDate.value,javaType=DATE}
                    )OR(
                        m_crm_meeting.endDate > @{searchCriteria.startDate.value,javaType=DATE}
                    )OR(
                        m_crm_meeting.startDate > @{searchCriteria.endDate.value,javaType=DATE}
                    )OR(
                        m_crm_meeting.startDate < @{searchCriteria.startDate.value,javaType=DATE}
                        AND m_crm_meeting.endDate > @{searchCriteria.endDate.value,javaType=DATE}
                    )
                )
            #end
        #end
        ]]>
	</sql>

	<sql id="orderStatement">
		ORDER BY
        #ifnotnull($_parameter.searchCriteria.orderFields)
            #repeat(${_parameter.searchCriteria.orderFields} $orderField "" "" "")
                ${orderField.field} ${orderField.direction},
            #end
        #end
        m_crm_meeting.lastUpdatedTime DESC
	</sql>

	<select id="findPageableListByCriteria" parameterType="MeetingSearchCriteria"
		resultMap="SimpleMeetingResult" lang="velocity">
		<include refid="selectSimpleMeeting" />
		#ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
				<include refid="querySearchCriteria" />
			#end
        #end    
	    <include refid="orderStatement" />
	</select>

	<select id="getTotalCount" parameterType="MeetingSearchCriteria"
		resultType="java.lang.Integer" lang="velocity">
		SELECT count(*) as totalCount FROM m_crm_meeting
		#ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
				<include refid="querySearchCriteria" />
			#end
		#end
	</select>
    
    <select id="findById" parameterType="int" resultMap="SimpleMeetingResult" lang="velocity">
        <include refid="selectSimpleMeeting" />

        WHERE m_crm_meeting.id=@{meetingId,jdbcType=NUMERIC}
    </select>

	<select id="getNextItemKey" parameterType="map" resultType="java.lang.Integer" lang="velocity">
		SELECT MIN(id) FROM m_crm_meeting

		#trimext("WHERE" "AND|OR")
			<include refid="querySearchCriteria" />
		#end
	</select>

	<select id="getPreviousItemKey" parameterType="map"
		resultType="java.lang.Integer" lang="velocity">
		SELECT MAX(id) FROM m_crm_meeting

		#trimext("WHERE" "AND|OR")
			<include refid="querySearchCriteria" />
		#end
	</select>

</mapper>