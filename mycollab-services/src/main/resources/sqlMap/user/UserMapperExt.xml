<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mycollab.module.user.dao.UserMapperExt">
    <resultMap extends="com.mycollab.module.user.dao.UserMapper.BaseResultMap"
        id="SimpleUserResult" type="com.mycollab.module.user.domain.SimpleUser">
        <result column="displayName" jdbcType="VARCHAR" property="displayName" />
        <result column="roleName" jdbcType="VARCHAR" property="roleName" />
        <result column="subdomain" jdbcType="VARCHAR" property="subdomain" />
        <result column="roleid" jdbcType="INTEGER" property="roleid" />
        <result column="isAccountOwner" jdbcType="BIT" property="isAccountOwner" />
        <result column="accountId" jdbcType="INTEGER" property="accountId" />
        <result column="inviteUser" jdbcType="VARCHAR" property="inviteUser" />
        <result column="inviteUserFullName" jdbcType="VARCHAR" property="inviteUserFullName" />
        <result column="lastModuleVisit" jdbcType="VARCHAR" property="lastModuleVisit" />
        <result column="dateFormat" jdbcType="VARCHAR" property="dateFormat" />
        <result column="shortDateFormat" jdbcType="VARCHAR" property="shortDateFormat" />
        <result column="longDateFormat" jdbcType="VARCHAR" property="longDateFormat" />
        <result column="showEmailPublicly" jdbcType="BIT" property="showEmailPublicly" />
        <result column="canSendEmail" jdbcType="BIT" property="canSendEmail" />
    </resultMap>

    <sql id="querySearchCriteria">
        <![CDATA[
            #set($searchCriteria = $_parameter.searchCriteria)
            
            #ifnotnull($searchCriteria.displayName)
                ${searchCriteria.displayName.operation} concat(s_user.firstname, ' ', LTRIM(IFNULL(s_user.middlename + ' ', '')), s_user.lastname) like '%${searchCriteria.displayName.value}%'
            #end
            
            #ifnotnull($searchCriteria.username)
                ${searchCriteria.username.operation} s_user.username = @{searchCriteria.username.value}
            #end
            
            #ifnotnull($searchCriteria.saccountid)
                ${searchCriteria.saccountid.operation} s_user_account.accountId = @{searchCriteria.saccountid.value,jdbcType=NUMERIC}
            #end
            
            #ifnotnull($searchCriteria.subdomain)
                ${searchCriteria.subdomain.operation} 
                EXISTS (SELECT 1
                    FROM s_account, s_user_account AS user_account 
                    WHERE s_account.subdomain=@{searchCriteria.subdomain.value} 
                        AND  user_account.accountId=s_account.id 
                        AND user_account.username=s_user.username
                LIMIT 1)
            #end
            
            #ifnotnull($searchCriteria.registerStatuses)
                ${searchCriteria.registerStatuses.operation}
                s_user_account.registerStatus IN 
                #repeat(${searchCriteria.registerStatuses.values} $registerStatus "," "(" ")")
                    @{registerStatus}
                #end
            #end
            
            #ifnotnull($searchCriteria.statuses)
                ${searchCriteria.statuses.operation}
                s_user.status IN
                #repeat(${searchCriteria.statuses.values} $status "," "(" ")")
                    @{status}
                #end
            #end
            
            #selectExpr($searchCriteria.extraFields)
        ]]>
    </sql>

    <sql id="queryTotalCountSearchCriteria">
        <![CDATA[
            #set($searchCriteria = $_parameter.searchCriteria)
            
            #ifnotnull($searchCriteria.displayName)
                ${searchCriteria.displayName.operation} concat(s_user.firstname, ' ', LTRIM(IFNULL(s_user.middlename + ' ', '')), s_user.lastname) like '%${searchCriteria.displayName.value}%'
            #end
            
            #ifnotnull($searchCriteria.username)
                ${searchCriteria.username.operation} s_user.username = @{searchCriteria.username.value}
            #end
            
            #ifnotnull($searchCriteria.saccountid)
                ${searchCriteria.saccountid.operation} 
                EXISTS (SELECT 1
                    FROM s_user_account
                    WHERE s_user_account.accountId = @{searchCriteria.saccountid.value,jdbcType=NUMERIC} 
                        AND s_user_account.username=s_user.username LIMIT 1)
            #end
            
            #ifnotnull($searchCriteria.subdomain)
                ${searchCriteria.subdomain.operation} 
                EXISTS (SELECT 1
                    FROM s_account, s_user_account AS user_account 
                    WHERE s_account.subdomain=@{searchCriteria.subdomain.value} 
                        AND  user_account.accountId=s_account.id 
                        AND user_account.username=s_user.username
                LIMIT 1)
            #end
            
            #ifnotnull($searchCriteria.registerStatuses)
                ${searchCriteria.registerStatuses.operation}
                EXISTS (SELECT 1
                    FROM s_user_account
                    WHERE
                        s_user.username=s_user_account.username AND s_user_account.accountId = @{searchCriteria.saccountid.value,jdbcType=NUMERIC} AND
                        s_user_account.registerStatus IN
                        #repeat(${searchCriteria.registerStatuses.values} $registerStatus "," "(" ")")
                            @{registerStatus}
                        #end
                    LIMIT 1)
            #end
            
            #totalCountExpr($searchCriteria.extraFields)
        ]]>
    </sql>

    <sql id="selectUser">
        <![CDATA[
        SELECT DISTINCT s_user.username, s_user.firstname, s_user.middlename, s_user.lastname, s_user.nickname, s_user.dateofbirth, 
            s_user.email, s_user.website, s_user.company,
            s_user.timezone, s_user.language, s_user.country, s_user.workPhone, s_user.homePhone,
            s_user.facebookAccount, s_user.twitterAccount, s_user.skypeContact,
            s_user.password, s_user.avatarId, s_user.status, s_user.requestAd,
            s_user.YYMMDDFormat, s_user.humanDateFormat, s_user.MMDDFormat,
            s_account.subdomain AS subdomain, s_account.defaultYYMMDDFormat AS dateFormat,
            s_account.defaultMMDDFormat AS shortDateFormat, s_account.defaultHumanDateFormat AS longDateFormat,
            s_account.displayEmailPublicly AS showEmailPublicly,
            concat(s_user.firstname, ' ', LTRIM(concat(IFNULL(s_user.middlename, ''), ' ')),  s_user.lastname) AS  displayName,
            s_roles.rolename AS roleName,  s_user_account.isAccountOwner, s_user_account.roleid, s_user_account.accountId AS accountId, 
            s_user_account.registerStatus, s_user_account.registeredTime, s_user_account.inviteUser, s_user_account.lastAccessedTime,
            s_user_account.lastModuleVisit,
            concat(inviteUser.firstname, ' ', LTRIM(concat(IFNULL(inviteUser.middlename, ''), ' ')),  inviteUser.lastname) AS  inviteUserFullName
        FROM s_user 
                INNER JOIN s_user_account ON (s_user.username=s_user_account.username)
                INNER JOIN s_account ON (s_user_account.accountId = s_account.id)
                LEFT OUTER JOIN s_roles ON (s_roles.id = s_user_account.roleid)
                LEFT OUTER JOIN s_user AS inviteUser ON (inviteUser.username=s_user_account.inviteUser)
        ]]>
    </sql>

    <sql id="orderStatement">
        ORDER BY
        #ifnotnull($_parameter.searchCriteria.orderFields)
            #repeat(${_parameter.searchCriteria.orderFields} $orderField "" "" "")
                ${orderField.field} ${orderField.direction},
            #end
        #end
        s_user.email DESC
    </sql>

    <select id="getTotalCount" resultType="int" parameterType="UserSearchCriteria"
        lang="velocity">
        SELECT count(*) as totalCount FROM s_user
        #ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
                <include refid="queryTotalCountSearchCriteria" />
            #end
        #end
    </select>

    <select id="findPageableListByCriteria" resultMap="SimpleUserResult" parameterType="UserSearchCriteria" lang="velocity">
        <include refid="selectUser" />
        #ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
                <include refid="querySearchCriteria" />
            #end
        #end
        <include refid="orderStatement" />
    </select>

    <delete id="removeByCriteria" parameterType="UserSearchCriteria" lang="velocity">
        DELETE FROM s_user
        #ifnotnull($_parameter.searchCriteria)
            #trimext("WHERE" "AND|OR")
                <include refid="queryTotalCountSearchCriteria" />
            #end
        #end
    </delete>

    <select id="findUserByUserName" resultMap="SimpleUserResult" parameterType="java.lang.String" lang="velocity">
        <include refid="selectUser" />
        WHERE s_user.username=@{username}
    </select>

    <delete id="removeKeysWithSession" parameterType="java.util.List">
        <!--WARNING - @mbggenerated -->
        delete from s_user where username IN
        <foreach close=")" collection="list" index="index" item="item"
            open="(" separator=","> #{item} </foreach>
    </delete>
</mapper>